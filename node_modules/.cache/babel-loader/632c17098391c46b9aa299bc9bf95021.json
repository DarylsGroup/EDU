{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI THIN\\\\OneDrive\\\\Documents\\\\eduedu\\\\src\\\\components\\\\home\\\\EnrollmentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EnrollmentForm = _ref => {\n  _s();\n\n  let {\n    onClose\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState({}); // To store validation errors\n  // Function to validate the form inputs\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!name) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Email address is invalid';\n    }\n\n    return newErrors;\n  }; // Handle form submission\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submission\n    // Validate the form\n\n    const validationErrors = validateForm();\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors); // Update errors state\n\n      return; // Stop submission if there are errors\n    } // If validation passes, you can handle the form data here\n\n\n    console.log('Form submitted:', {\n      name,\n      email\n    }); // Reset the form\n\n    setName('');\n    setEmail('');\n    setErrors({});\n    onClose(); // Close the modal after submission\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enrollment Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnrollmentForm, \"sA4Si+X3ukdzv29iYpxa+uSnACc=\");\n\n_c = EnrollmentForm;\nexport default EnrollmentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnrollmentForm\");","map":{"version":3,"names":["React","useState","EnrollmentForm","onClose","name","setName","email","setEmail","errors","setErrors","validateForm","newErrors","test","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","console","log","target","value"],"sources":["C:/Users/MSI THIN/OneDrive/Documents/eduedu/src/components/home/EnrollmentForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst EnrollmentForm = ({ onClose }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [errors, setErrors] = useState({}); // To store validation errors\r\n\r\n  // Function to validate the form inputs\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!name) {\r\n      newErrors.name = 'Name is required';\r\n    }\r\n    if (!email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      newErrors.email = 'Email address is invalid';\r\n    }\r\n    return newErrors;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent the default form submission\r\n\r\n    // Validate the form\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors); // Update errors state\r\n      return; // Stop submission if there are errors\r\n    }\r\n\r\n    // If validation passes, you can handle the form data here\r\n    console.log('Form submitted:', { name, email });\r\n    \r\n    // Reset the form\r\n    setName('');\r\n    setEmail('');\r\n    setErrors({});\r\n    onClose(); // Close the modal after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close\" onClick={onClose}>&times;</span>\r\n        <h2>Enrollment Form</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={name} \r\n              onChange={(e) => setName(e.target.value)} \r\n              required \r\n            />\r\n            {errors.name && <div className=\"error\">{errors.name}</div>}\r\n          </label>\r\n          <label>\r\n            Email:\r\n            <input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              value={email} \r\n              onChange={(e) => setEmail(e.target.value)} \r\n              required \r\n            />\r\n            {errors.email && <div className=\"error\">{errors.email}</div>}\r\n          </label>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnrollmentForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}